# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so
*.dll

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/version info into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot
*.log

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or application, you probably don't want to ignore these,
#   see https://github.com/github/gitignore/pull/2338#issuecomment-376290081
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if have platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install different versions of packages based
#   on the platform. Consequently, Pipfile.lock will differ across platforms.
#   At the discretion of the user, Pipfile.lock can be ignored alternatively.
# Pipfile.lock

# PEP 582; __pypackages__ directory
__pypackages__/

# Environments
.env
.venv/  # <---- WICHTIG: Ihre virtuelle Umgebung
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# VS Code
.vscode/  # <---- Kann man diskutieren. Manche wollen es drin haben, manche nicht.
          # Für persönliche Projekte oft OK, für Teamprojekte Absprachen treffen.
          # Wenn Sie es ignorieren, müssen andere die Debug-Konfigs etc. selbst einrichten.
          # Für dieses Projekt würde ich es zunächst drin lassen, da es Ihre persönliche Konfiguration ist.
          # Wenn Sie es ignorieren wollen, entfernen Sie das Kommentarzeichen und die Zeile darunter.
#!.vscode/settings.json
#!.vscode/tasks.json
#!.vscode/launch.json
#!.vscode/extensions.json
#*.code-workspace

# SQLite
*.sqlite3
*.sqlite3-journal
# Wenn Ihre Haupt-DB anders heißt und versioniert werden soll, kommentieren Sie die obigen aus
# oder fügen Sie eine Ausnahme hinzu, z.B. !my_production_db.sqlite3

# IDE-spezifische Dateien (Beispiele)
.idea/
*.swp
*.swo
```    **Wichtig:** Der Eintrag `.venv/` stellt sicher, dass Ihre virtuelle Umgebung nicht zu Git hinzugefügt wird. Auch `.vscode/` ist oft diskutiert; für den Anfang können Sie es drin lassen oder auskommentieren, je nach Präferenz.